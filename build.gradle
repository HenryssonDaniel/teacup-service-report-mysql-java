plugins {
    id 'jacoco'
    id 'maven-publish'
    id 'org.sonarqube' version '2.8'
    id 'signing'
    id 'war'
}

group = 'io.github.henryssondaniel.teacup.service.report'
version = '1.0.4-SNAPSHOT'

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

task integrationTestReport(type: JacocoReport) {
    executionData integrationTest
    sourceSets sourceSets.intTest
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTestReport

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'io.github.henryssondaniel.teacup:core:1.2.1-SNAPSHOT'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'mysql:mysql-connector-java:8.0.18'
    implementation 'org.json:json:20190722'
    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation 'org.glassfish.jersey.core:jersey-common:2.29.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0-M1'
    testImplementation 'org.mockito:mockito-core:3.1.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
            artifact sourcesJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }

                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = project.group + ':' + project.name
                description = 'Connect your Teacup visualization data to a MySQL database'
                url = 'https://github.com/HenryssonDaniel/teacup-service-report-mysql-java'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        name = 'Daniel Henrysson'
                        email = 'henrysson.daniel@gmail.com'
                        organization = 'Daniel Henrysson AB'
                        organizationUrl = 'https://github.com/HenryssonDaniel'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/HenryssonDaniel/teacup-service-report-mysql-java.git'
                    developerConnection = 'scm:git:ssh://github.com/HenryssonDaniel/teacup-service-report-mysql-java.git'
                    url = 'https://github.com/HenryssonDaniel/teacup-service-report-mysql-java'
                }
            }
        }
    }
    repositories {
        maven {
            def repoUrl = "https://oss.sonatype.org/"
            def releasesRepoUrl = repoUrl + "service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = repoUrl + "content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            if (project.hasProperty('ossrhUsername')) {
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

signing {
    sign publishing.publications.mavenJava
}

sonarqube {
    properties {
        property "sonar.projectKey", "HenryssonDaniel_teacup-service-report-mysql-java"
    }
}